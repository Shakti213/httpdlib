#ifndef REQUEST_LINE_H
#define REQUEST_LINE_H

#include "httpdlib/interface/data_parser.h"
#include <string>

namespace httpdlib
{

namespace parser
{

class request_line : public interface::data_parser
{
    enum state {
        waiting_method_start,
        collecting_method,
        waiting_uri_start,
        collecting_uri,
        collecting_query,
        collecting_fragment,
        waiting_version_start,
        collecting_version,
        line_done,
        line_error
    };

    state m_state = waiting_method_start;
    std::size_t m_byte_count = 0;

    std::string m_method;
    std::string m_uri;
    std::string m_query_string;
    std::string m_fragment;
    std::string m_version;

public:
    ~request_line();
    bool done() const override;
    void add_data(char data) override;
    size_t size() const override;
    std::string method() const;
    std::string uri() const;
    std::string query_string() const;
    std::string fragment() const;
    std::string version() const;
};
}
}

#endif // REQUEST_LINE_H
